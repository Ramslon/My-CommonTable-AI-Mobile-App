name: Android AAB Build

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/hosting.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      JAVA_VERSION: '17'
      FLUTTER_CHANNEL: 'stable'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter (${{ env.FLUTTER_CHANNEL }})
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Restore Pub Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Fetch Dependencies
        run: |
          flutter pub get

      - name: Decode Android keystore (if provided)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "Decoding keystore" 
          mkdir -p android/keystores
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/keystores/upload-keystore.jks
          cat > android/key.properties << 'EOF'
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=keystores/upload-keystore.jks
          EOF

      - name: Build AAB (release)
        run: |
          flutter build appbundle --release

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ github.run_number }}.aab
          path: build/app/outputs/bundle/release/app-release.aab
          if-no-files-found: error
